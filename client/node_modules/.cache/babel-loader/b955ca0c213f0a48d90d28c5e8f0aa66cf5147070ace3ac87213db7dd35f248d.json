{"ast":null,"code":"var _jsxFileName = \"/Users/pragya/Documents/Projects/classical-music-app/client/src/components/Discussion.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './Discussion.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Discussion({\n  pieceId,\n  userId\n}) {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [newMessage, setNewMessage] = useState('');\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  // Fetch messages\n  useEffect(() => {\n    fetch(`http://localhost:4000/api/pieces/${pieceId}/discussion`).then(res => res.json()).then(data => {\n      setMessages(data);\n      setLoading(false);\n    }).catch(error => {\n      console.error('Error fetching discussion:', error);\n      setError('Failed to load discussion');\n      setLoading(false);\n    });\n  }, [pieceId]);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!newMessage.trim()) return;\n    try {\n      const response = await fetch(`http://localhost:4000/api/pieces/${pieceId}/discussion`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          userId,\n          content: newMessage\n        })\n      });\n      const message = await response.json();\n      setMessages([...messages, message]);\n      setNewMessage('');\n    } catch (error) {\n      console.error('Error posting message:', error);\n    }\n  };\n  const handleLike = async messageId => {\n    try {\n      const response = await fetch(`http://localhost:4000/api/pieces/${pieceId}/discussion/${messageId}/like`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          userId\n        })\n      });\n      const updatedMessage = await response.json();\n      setMessages(messages.map(msg => msg.id === messageId ? updatedMessage : msg));\n    } catch (error) {\n      console.error('Error liking message:', error);\n    }\n  };\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"discussion-loading\",\n    children: \"Loading discussion...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 25\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"discussion-error\",\n    children: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 23\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"discussion\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Discussion\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"message-list\",\n      children: messages.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"no-messages\",\n        children: \"Be the first to start a discussion about this piece!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 21\n      }, this) : messages.map(message => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"message\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"message-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: message.content\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"message-meta\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"message-time\",\n              children: new Date(message.timestamp).toLocaleString()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: `like-button ${message.likes.includes(userId) ? 'liked' : ''}`,\n              onClick: () => handleLike(message.id),\n              children: [\"\\u2665 \", message.likes.length]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 29\n        }, this), message.replies.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"replies\",\n          children: message.replies.map(reply => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"reply\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: reply.content\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 45\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"reply-time\",\n              children: new Date(reply.timestamp).toLocaleString()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 45\n            }, this)]\n          }, reply.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 41\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 33\n        }, this)]\n      }, message.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      className: \"message-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n        value: newMessage,\n        onChange: e => setNewMessage(e.target.value),\n        placeholder: \"Share your thoughts about this piece...\",\n        rows: \"3\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        disabled: !newMessage.trim(),\n        children: \"Post Message\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 9\n  }, this);\n}\n_s(Discussion, \"7P/Gd9n0gPQwD/vLNYZVtCgthBs=\");\n_c = Discussion;\nexport default Discussion;\nvar _c;\n$RefreshReg$(_c, \"Discussion\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Discussion","pieceId","userId","_s","messages","setMessages","newMessage","setNewMessage","loading","setLoading","error","setError","fetch","then","res","json","data","catch","console","handleSubmit","e","preventDefault","trim","response","method","headers","body","JSON","stringify","content","message","handleLike","messageId","updatedMessage","map","msg","id","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","Date","timestamp","toLocaleString","likes","includes","onClick","replies","reply","onSubmit","value","onChange","target","placeholder","rows","type","disabled","_c","$RefreshReg$"],"sources":["/Users/pragya/Documents/Projects/classical-music-app/client/src/components/Discussion.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './Discussion.css';\n\nfunction Discussion({ pieceId, userId }) {\n    const [messages, setMessages] = useState([]);\n    const [newMessage, setNewMessage] = useState('');\n    const [loading, setLoading] = useState(true);\n    const [error, setError] = useState(null);\n\n    // Fetch messages\n    useEffect(() => {\n        fetch(`http://localhost:4000/api/pieces/${pieceId}/discussion`)\n            .then(res => res.json())\n            .then(data => {\n                setMessages(data);\n                setLoading(false);\n            })\n            .catch(error => {\n                console.error('Error fetching discussion:', error);\n                setError('Failed to load discussion');\n                setLoading(false);\n            });\n    }, [pieceId]);\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n        if (!newMessage.trim()) return;\n\n        try {\n            const response = await fetch(`http://localhost:4000/api/pieces/${pieceId}/discussion`, {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n                body: JSON.stringify({\n                    userId,\n                    content: newMessage\n                }),\n            });\n\n            const message = await response.json();\n            setMessages([...messages, message]);\n            setNewMessage('');\n        } catch (error) {\n            console.error('Error posting message:', error);\n        }\n    };\n\n    const handleLike = async (messageId) => {\n        try {\n            const response = await fetch(\n                `http://localhost:4000/api/pieces/${pieceId}/discussion/${messageId}/like`,\n                {\n                    method: 'POST',\n                    headers: {\n                        'Content-Type': 'application/json',\n                    },\n                    body: JSON.stringify({ userId }),\n                }\n            );\n\n            const updatedMessage = await response.json();\n            setMessages(messages.map(msg => \n                msg.id === messageId ? updatedMessage : msg\n            ));\n        } catch (error) {\n            console.error('Error liking message:', error);\n        }\n    };\n\n    if (loading) return <div className=\"discussion-loading\">Loading discussion...</div>;\n    if (error) return <div className=\"discussion-error\">{error}</div>;\n\n    return (\n        <div className=\"discussion\">\n            <h3>Discussion</h3>\n            \n            <div className=\"message-list\">\n                {messages.length === 0 ? (\n                    <p className=\"no-messages\">Be the first to start a discussion about this piece!</p>\n                ) : (\n                    messages.map(message => (\n                        <div key={message.id} className=\"message\">\n                            <div className=\"message-content\">\n                                <p>{message.content}</p>\n                                <div className=\"message-meta\">\n                                    <span className=\"message-time\">\n                                        {new Date(message.timestamp).toLocaleString()}\n                                    </span>\n                                    <button \n                                        className={`like-button ${message.likes.includes(userId) ? 'liked' : ''}`}\n                                        onClick={() => handleLike(message.id)}\n                                    >\n                                        ♥ {message.likes.length}\n                                    </button>\n                                </div>\n                            </div>\n                            \n                            {message.replies.length > 0 && (\n                                <div className=\"replies\">\n                                    {message.replies.map(reply => (\n                                        <div key={reply.id} className=\"reply\">\n                                            <p>{reply.content}</p>\n                                            <span className=\"reply-time\">\n                                                {new Date(reply.timestamp).toLocaleString()}\n                                            </span>\n                                        </div>\n                                    ))}\n                                </div>\n                            )}\n                        </div>\n                    ))\n                )}\n            </div>\n\n            <form onSubmit={handleSubmit} className=\"message-form\">\n                <textarea\n                    value={newMessage}\n                    onChange={(e) => setNewMessage(e.target.value)}\n                    placeholder=\"Share your thoughts about this piece...\"\n                    rows=\"3\"\n                />\n                <button type=\"submit\" disabled={!newMessage.trim()}>\n                    Post Message\n                </button>\n            </form>\n        </div>\n    );\n}\n\nexport default Discussion; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}