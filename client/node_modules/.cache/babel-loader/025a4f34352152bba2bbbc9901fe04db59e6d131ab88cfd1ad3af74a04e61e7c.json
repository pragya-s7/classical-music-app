{"ast":null,"code":"var _jsxFileName = \"/Users/pragya/Documents/Projects/classical-music-app/client/src/components/PieceList.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport './PieceList.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction PieceList({\n  userId\n}) {\n  _s();\n  const [localPieces, setLocalPieces] = useState([]); // Local default pieces\n  const [imslpPieces, setImslpPieces] = useState([]); // IMSLP search results\n  const [loading, setLoading] = useState(true);\n  const [searchTerm, setSearchTerm] = useState('');\n  const [searchBy, setSearchBy] = useState('title'); // 'title' or 'composer'\n\n  // ----------------------------------------\n  // 1) Fetch your local “default” pieces (existing DB)\n  // ----------------------------------------\n  useEffect(() => {\n    fetch('http://localhost:4000/api/pieces').then(res => res.json()).then(data => {\n      setLocalPieces(data);\n      setLoading(false);\n    }).catch(error => {\n      console.error('Error fetching local pieces:', error);\n      setLoading(false);\n    });\n  }, []);\n\n  // ----------------------------------------\n  // 2) Whenever search changes, fetch from IMSLP\n  //    (This is a pseudo-endpoint for demonstration)\n  // ----------------------------------------\n  useEffect(() => {\n    // If no search term, reset IMSLP pieces and skip fetch\n    if (!searchTerm.trim()) {\n      setImslpPieces([]);\n      return;\n    }\n\n    // Construct a hypothetical IMSLP API endpoint\n    // In reality, you’ll need to adapt this to the actual service or a custom backend.\n    let imslpApiUrl = '';\n    if (searchBy === 'composer') {\n      // e.g. searching by composer\n      // Some real or proxied endpoint:\n      imslpApiUrl = `https://your-proxy.com/imslp?composer=${encodeURIComponent(searchTerm)}`;\n    } else {\n      // e.g. searching by title\n      imslpApiUrl = `https://your-proxy.com/imslp?title=${encodeURIComponent(searchTerm)}`;\n    }\n    fetch(imslpApiUrl).then(res => res.json()).then(data => {\n      // `data` shape may differ; adapt to your rendering needs\n      // Suppose it returns an array of pieces with { id, title, composer, difficulty? }\n      setImslpPieces(data);\n    }).catch(error => {\n      console.error('Error fetching IMSLP pieces:', error);\n    });\n  }, [searchTerm, searchBy]);\n\n  // ----------------------------------------\n  // 3) Handle local search filtering for your local pieces\n  //    and combine with the IMSLP results\n  // ----------------------------------------\n  // Filter local pieces by searchTerm\n  const filteredLocalPieces = localPieces.filter(piece => {\n    const fieldToSearch = searchBy === 'composer' ? piece.composer : piece.title;\n    return fieldToSearch.toLowerCase().includes(searchTerm.toLowerCase());\n  });\n\n  // Combine local filtered pieces + IMSLP search results\n  // (Up to you whether you want them in separate sections or all in one list)\n  const combinedPieces = [...filteredLocalPieces, ...imslpPieces];\n\n  // ----------------------------------------\n  // 4) Handlers for input changes\n  // ----------------------------------------\n  const handleSearchChange = e => {\n    setSearchTerm(e.target.value);\n  };\n  const handleSearchByChange = e => {\n    setSearchBy(e.target.value);\n    setSearchTerm(''); // Reset search when switching type\n  };\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"pieces-loading\",\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 23\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"pieces-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Browse Classical Pieces\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"search-controls\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"search-type\",\n          children: /*#__PURE__*/_jsxDEV(\"select\", {\n            value: searchBy,\n            onChange: handleSearchByChange,\n            className: \"search-select\",\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"title\",\n              children: \"Search by Title\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"composer\",\n              children: \"Search by Composer\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: `Search by ${searchBy}...`,\n          value: searchTerm,\n          onChange: handleSearchChange,\n          className: \"search-input\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this), searchTerm.trim() && combinedPieces.length === 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"no-results\",\n        children: [\"No pieces found for \\\"\", searchTerm, \"\\\"\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pieces-grid\",\n      children: combinedPieces.map(piece => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"piece-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            to: `/piece/${piece.id}`,\n            children: piece.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"composer-name\",\n          children: piece.composer\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 13\n        }, this), piece.difficulty && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Difficulty: \", piece.difficulty, \"/10\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"piece-card-actions\",\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            to: `/piece/${piece.id}`,\n            className: \"view-details\",\n            children: \"View Details\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 13\n        }, this)]\n      }, piece.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 5\n  }, this);\n}\n_s(PieceList, \"2n4M0Ijp0eIwG2jxKJQsCGS28hI=\");\n_c = PieceList;\nexport default PieceList;\nvar _c;\n$RefreshReg$(_c, \"PieceList\");","map":{"version":3,"names":["React","useState","useEffect","Link","jsxDEV","_jsxDEV","PieceList","userId","_s","localPieces","setLocalPieces","imslpPieces","setImslpPieces","loading","setLoading","searchTerm","setSearchTerm","searchBy","setSearchBy","fetch","then","res","json","data","catch","error","console","trim","imslpApiUrl","encodeURIComponent","filteredLocalPieces","filter","piece","fieldToSearch","composer","title","toLowerCase","includes","combinedPieces","handleSearchChange","e","target","value","handleSearchByChange","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onChange","type","placeholder","length","map","to","id","difficulty","_c","$RefreshReg$"],"sources":["/Users/pragya/Documents/Projects/classical-music-app/client/src/components/PieceList.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport './PieceList.css';\n\nfunction PieceList({ userId }) {\n  const [localPieces, setLocalPieces] = useState([]);     // Local default pieces\n  const [imslpPieces, setImslpPieces] = useState([]);     // IMSLP search results\n  const [loading, setLoading] = useState(true);\n\n  const [searchTerm, setSearchTerm] = useState('');\n  const [searchBy, setSearchBy] = useState('title');       // 'title' or 'composer'\n\n  // ----------------------------------------\n  // 1) Fetch your local “default” pieces (existing DB)\n  // ----------------------------------------\n  useEffect(() => {\n    fetch('http://localhost:4000/api/pieces')\n      .then((res) => res.json())\n      .then((data) => {\n        setLocalPieces(data);\n        setLoading(false);\n      })\n      .catch((error) => {\n        console.error('Error fetching local pieces:', error);\n        setLoading(false);\n      });\n  }, []);\n\n  // ----------------------------------------\n  // 2) Whenever search changes, fetch from IMSLP\n  //    (This is a pseudo-endpoint for demonstration)\n  // ----------------------------------------\n  useEffect(() => {\n    // If no search term, reset IMSLP pieces and skip fetch\n    if (!searchTerm.trim()) {\n      setImslpPieces([]);\n      return;\n    }\n\n    // Construct a hypothetical IMSLP API endpoint\n    // In reality, you’ll need to adapt this to the actual service or a custom backend.\n    let imslpApiUrl = '';\n    if (searchBy === 'composer') {\n      // e.g. searching by composer\n      // Some real or proxied endpoint:\n      imslpApiUrl = `https://your-proxy.com/imslp?composer=${encodeURIComponent(searchTerm)}`;\n    } else {\n      // e.g. searching by title\n      imslpApiUrl = `https://your-proxy.com/imslp?title=${encodeURIComponent(searchTerm)}`;\n    }\n\n    fetch(imslpApiUrl)\n      .then((res) => res.json())\n      .then((data) => {\n        // `data` shape may differ; adapt to your rendering needs\n        // Suppose it returns an array of pieces with { id, title, composer, difficulty? }\n        setImslpPieces(data);\n      })\n      .catch((error) => {\n        console.error('Error fetching IMSLP pieces:', error);\n      });\n  }, [searchTerm, searchBy]);\n\n  // ----------------------------------------\n  // 3) Handle local search filtering for your local pieces\n  //    and combine with the IMSLP results\n  // ----------------------------------------\n  // Filter local pieces by searchTerm\n  const filteredLocalPieces = localPieces.filter((piece) => {\n    const fieldToSearch =\n      searchBy === 'composer' ? piece.composer : piece.title;\n    return fieldToSearch\n      .toLowerCase()\n      .includes(searchTerm.toLowerCase());\n  });\n\n  // Combine local filtered pieces + IMSLP search results\n  // (Up to you whether you want them in separate sections or all in one list)\n  const combinedPieces = [...filteredLocalPieces, ...imslpPieces];\n\n  // ----------------------------------------\n  // 4) Handlers for input changes\n  // ----------------------------------------\n  const handleSearchChange = (e) => {\n    setSearchTerm(e.target.value);\n  };\n\n  const handleSearchByChange = (e) => {\n    setSearchBy(e.target.value);\n    setSearchTerm(''); // Reset search when switching type\n  };\n\n  if (loading) return <div className=\"pieces-loading\">Loading...</div>;\n\n  return (\n    <div className=\"pieces-container\">\n      <h1>Browse Classical Pieces</h1>\n\n      {/* Search Section */}\n      <div className=\"search-section\">\n        <div className=\"search-controls\">\n          <div className=\"search-type\">\n            <select \n              value={searchBy} \n              onChange={handleSearchByChange}\n              className=\"search-select\"\n            >\n              <option value=\"title\">Search by Title</option>\n              <option value=\"composer\">Search by Composer</option>\n            </select>\n          </div>\n          <input\n            type=\"text\"\n            placeholder={`Search by ${searchBy}...`}\n            value={searchTerm}\n            onChange={handleSearchChange}\n            className=\"search-input\"\n          />\n        </div>\n\n        {/* Only show \"no results\" if user typed something AND combined results are empty */}\n        {searchTerm.trim() && combinedPieces.length === 0 && (\n          <p className=\"no-results\">\n            No pieces found for \"{searchTerm}\"\n          </p>\n        )}\n      </div>\n\n      {/* Display local + IMSLP results together */}\n      <div className=\"pieces-grid\">\n        {combinedPieces.map((piece) => (\n          <div key={piece.id} className=\"piece-card\">\n            <h3>\n              <Link to={`/piece/${piece.id}`}>\n                {piece.title}\n              </Link>\n            </h3>\n            <p className=\"composer-name\">{piece.composer}</p>\n            {piece.difficulty && (\n              <p>Difficulty: {piece.difficulty}/10</p>\n            )}\n            <div className=\"piece-card-actions\">\n              <Link to={`/piece/${piece.id}`} className=\"view-details\">\n                View Details\n              </Link>\n            </div>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n}\n\nexport default PieceList;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}